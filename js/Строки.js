const firstName = 'Alex';
const lastName = 'Aga';
const age = 30;
const str = 'Hello my name is Alex';

let value;

value = firstName + lastName;
value = firstName + ' ' + lastName;
value += ' I am ' + age; // сокращенный вариант от value = value + ' I am ' + age;

value = firstName.length; // показывает количеству символов в строке

value = firstName[0]; // выводит индекс строки (в данном случае это буква A, если [1] будет буква l и тд.)

value = lastName[lastName.length - 1]; // чтобы определять последний символ автоматически (индекс)

// Методы работы со строками (возвращают измененное значение строки, но не изменяют строку) Все методы чувствительны к регистру.
value = firstName.toUpperCase(); // все буквы заглавными
value = firstName.concat(' ', lastName);// принимает строки, которые мы хотим конкатенировать (конкатенация это склеивание строк и др. типов данных)
value = str.indexOf('n', 10); // indexOf показывает индес введённой в скобках буквы, именно её первое вхождение, чтобы найти последующие вхождения, вторым аргументом указываем индекс, с которого нужно начинать искать, в данном примере с 10 индекса (пробелы также считаются за символ, отсчёт как всегда с 0); также можно вместо символов искать и слова. Если метод не находит искомого он показывает -1. Есть ещё lastIndexOf - он ищет с конца строки.

value = str.includes('my'); // в случае обнаружения искомого метод возвращает true, если нет false;

value = str.slice(0, 5); // возвращает значение указанное интервалом в скобках. От 0 до 5 - это в данном примере Hello. Если указать 0, без второго значения или пустоту, то он вернёт всю фразу целиком. Если указать 5, то вернёт всё что идёт начиная с 5 индекса. Может принимать отрицательные значения, вырезает с конца.

value = str.replace('Alex', 'Alexander'); //заменяет строку с первого значения в скобках на второе

console.log (value);